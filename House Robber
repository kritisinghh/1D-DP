class Solution {
    int func(vector<int> &nums){
        int n=nums.size();
        if (n==0) return 0;
        if (n==1) return nums[0];
        int dp0=nums[0];
        int dp1=max(nums[0], nums[1]);
        for(int i=2;i<n;i++){
            int curr=max(dp0+nums[i], dp1);
            dp0=dp1;
            dp1=curr;
        } 
        return dp1;
    }
public:
    int rob(vector<int>& nums) {
        int n=nums.size();
        if (n==1) return nums[0];
        vector<int> temp1, temp2;
        for(int i=0;i<n;i++){
            if (i!=0) temp1.push_back(nums[i]);
            if (i!=n-1) temp2.push_back(nums[i]);
        }
        int a=func(temp1);
        int b=func(temp2);
        return max(a, b);
    }
};
